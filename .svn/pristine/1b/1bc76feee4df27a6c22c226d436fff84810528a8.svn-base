<?php

namespace app\admin\controller\user;

use app\admin\model\UserAuthorize;
use app\common\controller\AdminController;
use EasyAdmin\annotation\ControllerAnnotation;
use EasyAdmin\annotation\NodeAnotation;
use EasyAdmin\tool\CommonTool;
use jianyan\excel\Excel;
use think\App;
use think\facade\Db;

/**
 * @ControllerAnnotation(title="user_baseinfo")
 */
class Baseinfo extends AdminController
{

    use \app\admin\traits\Curd;

    protected $relationSerach = true;

    protected $pk = 'uid';

    protected $sort = [
        'create_time' => 'desc',
    ];

    public function __construct(App $app)
    {
        parent::__construct($app);

        $this->model = new \app\admin\model\UserBaseinfo();

        $this->assign('getUserRole', $this->model->getUserRole());

        $this->assign('getGenderList', $this->model->getGenderList());

        $this->assign('getJobwantedstatusList', $this->model->getJobwantedstatusList());

        $this->assign('getRegisterTypeList', $this->model->getRegisterTypeList());

        $this->assign('getAccountStatusList', $this->model->getAccountStatusList());

        $this->assign('getIdentifierTypeList', $this->model->getIdentifierTypeList());

    }

    /**
     * @NodeAnotation(title="列表")
     */
    public function index()
    {
        if ($this->request->isAjax()) {
            if (input('selectFieds')) {
                return $this->selectList();
            }
            list($page, $limit, $where) = $this->buildTableParames();
            $count = $this->model
                ->withJoin('userAuthorize', 'LEFT')
                ->where($where)
                ->count();
            $list = $this->model
                ->withJoin('userAuthorize', 'LEFT')
                ->where($where)
                ->page($page, $limit)
                ->order($this->sort)
                ->select();
            $data = [
                'code'  => 0,
                'msg'   => '',
                'count' => $count,
                'data'  => $list,
            ];
            return json($data);
        }
        return $this->fetch();
    }

    /**
     * @NodeAnotation(title="添加")
     */
    public function add()
    {
        if ($this->request->isAjax()) {
            $post = $this->request->post();
            $rule = [];
            $this->validate($post, $rule);
            try {
                $post['uid'] = $this->model->createUid();
                $save = $this->model->save($post);
            } catch (\Exception $e) {
                $this->error('保存失败:'.$e->getMessage());
            }
            $save ? $this->success('保存成功') : $this->error('保存失败');
        }
        return $this->fetch();
    }

    /**
     * @NodeAnotation(title="授权小按钮")
     */
    public function authorize_index()
    {
        return $this->min_menu_index('\app\admin\model\UserAuthorize');
    }

    /**
     * @NodeAnotation(title="授权编辑小按钮")
     */
    public function authorize_edit()
    {
        return $this->min_menu_edit('\app\admin\model\UserAuthorize');
    }

    /**
     * @NodeAnotation(title="授权删除小按钮")
     */
    public function authorize_delete()
    {
        return $this->min_menu_delete('\app\admin\model\UserAuthorize');
    }

    /**
     * @NodeAnotation(title="定位小按钮")
     */
    public function locationinfo_index()
    {
        return $this->min_menu_index('\app\admin\model\UserLocationinfo');
    }

    /**
     * @NodeAnotation(title="定位编辑小按钮")
     */
    public function locationinfo_edit()
    {
        return $this->min_menu_edit('\app\admin\model\UserLocationinfo');
    }

    /**
     * @NodeAnotation(title="定位删除小按钮")
     */
    public function locationinfo_delete()
    {
        return $this->min_menu_delete('\app\admin\model\UserLocationinfo');
    }
}